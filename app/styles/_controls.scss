.controls {
	max-width: 15%;
	min-width: 18em;
	color: $colorNeutral;
	.checkboxes {
		padding-top: 8px;
		text-shadow: $textShadow;
	}
	label {
		display: block;
		height: 1.75em;
		line-height: 1.75em;
		> input {
			margin-left: 1em;
			position: absolute;
			left: -999em;
			&:not(.toggable) {
				vertical-align: middle;
				&:checked + .fa {
					color: $colorNeutral;
				}
				+.fa,
				+ .fa-stack > .fa {
					color: $colorDisabled;
					transition: color 1s;
				}
			}
		}
		> span::before {
			vertical-align: middle;
		}
		&:hover {
			> input:not(.toggable) + {
				.fa, .fa-stack > .fa {
					color: $colorNeutral;
				}
			}
			> .toggable {
					font-style: normal;
				+ span::before {
					content: 'on ';
					font-weight: bold;
					line-height: $toggleHeight;
					padding-left: $togglePadding;
					text-shadow: none;
					color: $colorVoid;
				}
				&:disabled + span::before {
					font-family: inherit;
					line-height: $toggleHeight;
				}
				+ .fa, + .fa-stack {
					padding-left: $togglePadding;
					color: $colorActive;
				}
			}
		}
	}


	.route + .fa,
	.emission + .fa-stack,
	.qte + .fa,
	.dist + .fa {
		width: 3em;
		text-align: center;
	}
	.toggable {
		&:disabled + span {
			color: hsl(0, 0%, 80%);
			font-style: italic;
		}
		+ span::before {
			width: 3em;
			text-align: center;
		}
		+ span::before,
		+ .fa, .fa-stack {
			font-style: normal;
			display: inline-block;
			height: 1.4em;
			line-height: 1.25em;
			margin-right: .25em;
			content: 'off';
			vertical-align: text-top;
			text-align: left;
			color: hsl(0, 0%, 67%);
			padding-left: .1em;
			transition: padding 1s, color 1s;
			/*box-shadow: 0 0 2px hsl(0, 0%, 60%);*/
			border: $defaultBtnBorder;
			border-bottom: $btnBorderBottom;
			border-radius: .15em;
		}
		.fa, .fa-stack {
			text-align: left;
			vertical-align: middle;
		}
		&:checked + {
			.fa, .fa-stack {
				padding-left: $togglePadding;
				color: $colorActive;
			}
		}
		&:checked + span::before {
			content: 'on ';
			font-weight: bold;
			font-style: normal;
			line-height: $toggleHeight;
			padding-left: $togglePadding;
			text-shadow: none;
			color: $colorActive;
		}
		&:disabled + span::before {
			content: 'on ';
			font-weight: bold;
			font-style: normal;
			line-height: $toggleHeight;
			padding-left: $togglePadding;
			text-shadow: none;
			color: $colorActive;
			content: '\f023  ';
			/*lock*/
			padding-right: .45em;
			padding-left: 1.8em;
			line-height: 1.4em;
			font-family: FontAwesome;
			font-weight: normal;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
		}
	}

	.epci + span::before {
		background: linear-gradient(to right,
								$colorShadow 0%,
								$colorShadow 50%,
								$colorDisabled 50%,
								$colorDisabled 51%,
								hsl(15, 87%, 55%) 51%,
								hsl(15, 87%, 55%) 100%);
	}
	.transfert + span::before {
		background: linear-gradient(to right,
								$colorShadow 0%,
								$colorShadow 50%,
								$colorDisabled 50%,
								$colorDisabled 51%,
								hsl(45, 100%, 52%) 51%,
								hsl(45, 100%, 52%) 100%);
	}
	.traitement + span::before {
		background: linear-gradient(to right,
								$colorShadow 0%,
								$colorShadow 50%,
								$colorDisabled 50%,
								$colorDisabled 51%,
								hsl(85, 53%, 50%) 51%,
								hsl(85, 53%, 50%) 100%);
	}
	.toggable + {
		.fa, .fa-stack {
			background: linear-gradient(to right,
								$colorShadow 0%,
								$colorShadow 50%,
								$colorDisabled 50%,
								$colorDisabled 51%,
								$colorVoid 52%,
								$colorVoid 100%);
		}
	}
	.counter {
		margin-top: 1em;
		border-top: $defaultBtnBorder;
		table {
			margin-top: .5em;
			border-spacing: .25em;
			border-collapse: separate;
			text-align: center;
			width: 100%;
		}
		th {
			font-size: .8em;
			font-weight: bold;
			text-transform: uppercase;
			text-align: center;
			margin: 1em 0;
		}
		td {
			border-radius: .25em;
			background-clip: padding-box;
			background-color: $progressive;
			border-bottom: $thickBorder solid darken($progressive, 30%);
			width: 33%;
			padding: .25em 0;
			color: $colorVoid;
		}
		.value {
			font-size: 1.25em;
		}
		.unit {
			font-size: .8em;
		}
	}
}
